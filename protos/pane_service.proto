// Protocol Buffer describing the Particpatory Networking service
// http://pane.cs.brown.edu
//
// Author: Andrew Ferguson (adf@cs.brown.edu)
//

package pane;
option java_package = "edu.brown.cs.pane";

import "pane.proto";

////////////////////////////////////////////////////////////////////////////////
// 
// RPC service stub declarations
//
////////////////////////////////////////////////////////////////////////////////

enum Result {
  UNKNOWN_RESULT = 0;
  SUCCESS = 1;
  ACCEPTED = 2;  // for hints
  INVALID_REQUEST = 20;
  INVALID_PERMISSION = 21;
  INSUFFICIENT_RESOURCES = 22;
  OTHER_FAILURE = 100;
}

message GenericResponse {
  optional Result result = 1;  // required
  optional string msg = 2;
}

message Grant {
  // References Share.id
  optional ShareID share_id = 1;  // required
  optional Principal to_principal = 2;  // required
}

message ShareFilter {
  optional Principal principal = 1;
  optional Flow flow = 2;
}

message ShareListResponse {
  optional Result result = 1;
  // references Share.id
  repeated ShareID share_id = 10;
}

message ShareResponse {
  optional Result result = 1;  // required
  optional Share share = 10;  // required
}

message RequestResponse {
  optional Result result = 1;  // required

  // For non-strict requests, return what was achieved
  optional uint32 bandwidth = 10;
  repeated Flow flow = 11;
}

message QueryResponse {
  optional Result result = 1;  // required
  optional uint32 traffic = 10;  // for QT_TRAFFIC
}

service PANEService {
  rpc authenticate (Principal) returns (GenericResponse);

  rpc grantShare (Grant) returns (GenericResponse);
  rpc newShare (Share) returns (GenericResponse);
//  rpc getSchedule (...) returns (...);  TODO(adf)
  rpc listShares (ShareFilter) returns (ShareListResponse);
  rpc viewShare (ShareID) returns (ShareResponse);

  rpc makeRequest (Request) returns (RequestResponse);
  rpc issueQuery (Query) returns (QueryResponse);
  rpc provideHint (Hint) returns (GenericResponse);
}
